#!/usr/bin/perl
=pod

SBX chooser

=head1 NAME

  sbx - Tool voor menu-selectie sandboxes.

=head1 DESCRIPTION

Keuze sandbox en het starten van de shell omgeving.

=head1 .sbxconfig

Configuratie file for your shell environment.

vb
   [foo]
      SBX=$HOME/sbx

=over 12

=item C<[item]>

Menu item shortname

=item C<SBX>

    Root of your sandbox
    The 'sb' alias return you to your sandbox.


=back

=head1 LICENSE

=head1 AUTHOR

Hans Mulder - H_Mulder@belastingdienst.nl

=head1 SEE ALSO

=cut

#
# GLOBALS in GLB

my %GLB={
            hostname => 'localhost'
        };
$GLB{hostname}=`hostname`;
$GLB{uname}=`uname`;
chomp $GLB{uname};
chomp $GLB{hostname};

#
#Registry stuff
#
package Win;
use Data::Dumper;
#use Win32::Registry;
my $reg='/cygdrive/c/Windows/System32/reg.exe';
#REG QUERY "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /s 
sub Query($)
{
  my $key=shift;
  my $q=$reg.' QUERY "'.$key.'" /s';
  my %keys;
  open(my $fh, '-|', $q) or die $!;
  while (my $l=<$fh>) {
    chomp $l;
    next if not $l =~ m/REG_/;
    #print "DBG:$l\n";
    my ($reg,$type,$val)=split(' ',$l,3);
    #print "DBG:reg $reg,$type,$val\n";
    $val =~ s/\r$//;
    $keys{$reg}= $val;
    #print 'DBG::$keys{'.$reg.'}="'.$val."\"\n";
  }
  close $fh;
	print "DBG:env==>".Dumper(\%keys)."\n";
  return %keys;
}
#
#CONFIG
#
package CONFIG;
use Data::Dumper;

my %CFG=();
sub  trim { my $s = shift; $s =~ s/^\s+|\s+$//g; return $s };
sub import()
{
  my $config_file="$ENV{HOME}/.sbxconfig";
  my $label="global";#default environment
  open CONFIG, $config_file or die "Could not open '$config_file':$!";
  while( <CONFIG> ){
    chomp;
    next if /^#/;#skip comment starting with #
    #$label = s/(^\[)||(\]$)// if /^\[/ ;
    s/[^\\]#.*//;  #strip comment
    if( m/^\[/ ){
      s/(^\[)||(\]$)//g;
      $label=$_;
    };
    if( m/=/ ){
      my ($var,$val)=split(/=/);
      $CFG{$label}{trim $var}= trim $val;
    }
  }
  #
	print "user_config".Dumper(\%CFG)."\n";
    
  close CONFIG;
}
sub get_group($)
{
  my $group=shift;
  return $CFG{$group};
}

#
#MENU
#
package MENU;
sub get_items()
{
  #TODO filter op menu
  my @items=();
  foreach my $grp ( keys %CFG ){
    push @items, $grp if $CFG{$grp}{'cfg.menu'} eq 'true';
  }
  return @items;
}
sub menu()
{
  my @options=get_items();

 	#!TODO enter toets geeft keuze en gaat dus door.
	my $nr=1;
	#print "user_menu".Dumper(\%menu)."\n";
	foreach(@options){
		print $nr++.") $_\n";
	}

	my $choice;
	while(1){
        	print "Select one [1..".($nr-1).']?';
        	$choice=<STDIN>;
		chomp $choice;
		$choice=1 if $choice eq '';#default
		last if $choice > 0 and $choice < $nr ;
	};

	return $options[$choice-1];
}

#
#Environment
#
package ENV;
use Data::Dumper;
sub export_grp($)
{
  my $group=shift;
  my $env=CONFIG::get_group($group);
	print "DBG:env".Dumper($env)."\n";
  #TODO mbv export
  foreach( keys $env ) {
    $ENV{$_}=$env->{$_};
    print "DBG:export $_, $ENV{$_} to $env->{$_}\n";
  }
}

#
# export hash to environemnt
#
sub export($)
{
	print "DBG:env".Dumper(\@_)."\n";
  my $env=shift;
	print "DBG:env".Dumper($env)."\n";
  foreach( keys $env ) {
    $ENV{$_}=$env->{$_};
    print "DBG:export $_= $ENV{$_}\n";
  }

}
sub sub_vars($)
{
  my $group=shift;
  my $env=CONFIG::get_group($group);

  my $found=0;
  do{
    $found=0;
    foreach my $var ( keys $env ) {
      #$ENV{$_}=$env->{$_};
      #print "DBG:test $var\n";
      if( $env->{$var} =~ m/\$\{([^}]*)\}/ ){
          my $varvar=$1;
          $env->{$var} =~ s/\$\{[^}]*\}/$ENV{$varvar}/ if  $ENV{$varvar};
          print "DBG:found $varvar, $ENV{$varvar} in \${} in $env->{$var}\n";
          $found=1;
        }
    }
  }while($found);
}
#
# Start shell
# Depends on cfg.type
# sh  : start sh
# cmd : start dos cmd.exe
sub start($)
{
  my $group=shift;
  my $env=CONFIG::get_group($group);
  #TODO start shell
  chdir( $ENV{SBXROOT} );
  for( $env->{'cfg.type'} ){
    system( 'sh')  if /^sh$/ ;
    shell_cmd()  if /^dos$/ ;
    system( '/cygdrive/c/Windows/System32/cmd.exe')  if /^cdos$/ ;
    break;
  }
  #print "DBG:chdir( $ENV{SBXROOT} )\n";
  #system('sh');
}

sub shell_cmd()
{
    my %env=Win::Query( 'HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment');
    my $PATH=$env{Path};
    ENV::export(\%env);
    %env=Win::Query( 'HKCU\Environment');
    $env{Path}=$PATH.';'.$env{Path};
    ENV::export(\%env);
    system( '/cygdrive/c/Windows/System32/cmd.exe');
}
#
# MAIN
# 
package MAIN;
use Data::Dumper;

my $test=0;
if($test){
  my %env=Win::Query( 'HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment');
	print "DBG:env==>".Dumper(\%env)."\n";
  print "DBG:stop\n";
  exit 100;
}
print "Start\n";
CONFIG::import();
my $choice=MENU::menu();
print "choice=$choice\n";
ENV::export_grp($choice);
ENV::sub_vars($choice);
ENV::export_grp($choice);
ENV::start($choice);
